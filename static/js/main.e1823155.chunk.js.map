{"version":3,"sources":["components/Expenses/ExpensesFilter.js","components/UI/Card.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpensesFilter","props","className","value","selected","onChange","event","onChangeFilter","target","Card","classes","children","ExpenseDate","month","date","toLocaleString","year","getFullYear","day","ExpenseItem","useState","title","setTitle","amount","onClick","console","log","ExpensesList","item","length","map","expense","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","datapoint","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","toString","filterYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","id","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prev","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e1823155.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n\r\n  const dropDownHandler = (event) =>{\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n            <label>Filter by year</label>\r\n            <select value = {props.selected} onChange={dropDownHandler}>\r\n            <option value='2022'>2022</option>\r\n            <option value='2021'>2021</option>\r\n            <option value='2020'>2020</option>\r\n            <option value='2019'>2019</option>\r\n            </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import './Card.css';\r\n\r\nfunction Card(props){\r\nconst classes = 'card '+ props.className;\r\n    return <div className={classes}>{props.children}</div>\r\n}\r\n\r\nexport default Card;","import './ExpenseDate.css'\r\n\r\nfunction ExpenseDate(props){\r\n\r\n    const month = props.date.toLocaleString('en-US', {month:'long'});\r\n    const year = props.date.getFullYear();\r\n    const day = props.date.toLocaleString('en-US', {day: '2-digit'});\r\n\r\n    return(\r\n        <div className=\"expense-date\">\r\n            <div className=\"expense-date__month\">{month}</div>\r\n            <div className=\"expense-date__year\">{year}</div>\r\n            <div className=\"expense-date__day\">{day}</div>\r\n       </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ExpenseDate;","import React, { useState } from 'react';\r\nimport Card from '../UI/Card';\r\nimport ExpenseDate from './ExpenseDate';\r\nimport './ExpenseItem.css';\r\n\r\n\r\nfunction ExpenseItem(props){\r\n\r\n    const [title, setTitle] = useState(props.title);\r\n\r\n;\r\n    const clickHandler = ()=>{\r\n        setTitle('Updated');\r\n        console.log(title)\r\n    };\r\n  \r\n\r\n    return(\r\n        <Card className='expense-item'>\r\n           \r\n           <ExpenseDate date={props.date}/>\r\n            <div className='expense-item__description'>\r\n                <h2>{title}</h2>\r\n                <div className='expense-item__price'>{props.amount}</div>\r\n            </div>\r\n            <button onClick={clickHandler}>Change Title</button>\r\n        </Card>\r\n        \r\n    );\r\n}\r\nexport default ExpenseItem;","import React from 'react'\r\nimport ExpenseItem from './ExpenseItem';\r\nimport './ExpensesList.css';\r\n\r\nexport const ExpensesList = (props) => {\r\n    if(props.item.length===0){\r\n        return <h2 className='expenses-list__fallback'>No Expenses Found</h2>;\r\n    }\r\n\r\n    return (\r\n             <ul className='expenses-list'>\r\n                {\r\n                 props.item.map(expense=> (\r\n                    <ExpenseItem \r\n                        title = {expense.title} \r\n                        amount = {expense.amount} \r\n                        date={expense.date}\r\n                    />\r\n                    ))\r\n                }\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default ExpensesList;\r\n","import React from \"react\";\r\nimport './ChartBar.css';\r\n\r\n\r\nexport const ChartBar = (props) => {\r\n \r\n    let barFillHeight = '0%';\r\n    if(props.maxValue>0){\r\n        barFillHeight=Math.round((props.value/props.maxValue)*100) + '%'\r\n    }\r\n    return (\r\n        <div className='chart-bar'>\r\n            <div className='chart-bar__inner'>\r\n                <div className='chart-bar__fill'\r\n                style={{height: barFillHeight}}></div>\r\n            </div>\r\n            <div className='chart-bar__label'>{props.label}</div>\r\n        </div>\r\n    );\r\n}\r\nexport default ChartBar;","import React from 'react';\r\nimport ChartBar from './ChartBar';\r\nimport './Chart.css';\r\n\r\nexport const Chart = (props) => {\r\n    const dataPointValues = props.dataPoints.map(dataPoint=>dataPoint.value);\r\n    const totalMaximum = Math.max(...dataPointValues);\r\n    return (\r\n        <div className='chart'>\r\n            {props.dataPoints.map((datapoint)=>(\r\n                <ChartBar \r\n                 key={datapoint.label}\r\n                 value={datapoint.value}\r\n                 maxValue={totalMaximum}\r\n                 label={datapoint.label}\r\n                 />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\nexport default Chart;\r\n","import React from 'react';\r\nimport Chart from '../Chart/Chart';\r\n\r\nexport const ExpensesChart = (props) => {\r\n    const chartDataPoints=[\r\n        {label:'Jan', value:0},\r\n        {label:'Feb', value:0},\r\n        {label:'Mar', value:0},\r\n        {label:'Apr', value:0},\r\n        {label:'May', value:0},\r\n        {label:'Jun', value:0},\r\n        {label:'Jul', value:0},\r\n        {label:'Aug', value:0},\r\n        {label:'Sep', value:0},\r\n        {label:'Oct', value:0},\r\n        {label:'Nov', value:0},\r\n        {label:'Dec', value:0},\r\n    ];\r\n\r\n    for(const expense of props.expenses){\r\n        const expenseMonth = expense.date.getMonth();\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n    return <Chart dataPoints={chartDataPoints}/>\r\n};\r\nexport default ExpensesChart;\r\n","import React, { useState } from 'react';\r\nimport ExpenseFilter from \"./ExpensesFilter\";\r\nimport Card from '../UI/Card';\r\nimport './Expenses.css';\r\nimport ExpensesList  from './ExpensesList';\r\nimport ExpensesChart from './ExpensesChart';\r\n\r\n\r\nconst Expenses= (props) =>{\r\n\r\n    const [filteredYear, setFilteredYear] = useState('2020');\r\n\r\n    const filterChangeHandler = (filterYear)=>{\r\n        setFilteredYear(filterYear);\r\n        console.log('Expense.js');\r\n        console.log(filterYear);\r\n    };\r\n\r\n    const filteredExpenses = props.item.filter(expense=>{\r\n        return expense.date.getFullYear().toString() === filteredYear;\r\n    })\r\n\r\n    \r\n\r\n    return(\r\n\r\n        <Card className= 'expenses'>\r\n          \r\n            <ExpenseFilter selected = {filteredYear} onChangeFilter={filterChangeHandler}/>\r\n            <ExpensesChart expenses={filteredExpenses}/>\r\n{            <ExpensesList item={filteredExpenses}/>}\r\n        </Card>\r\n    \r\n        \r\n    );\r\n}\r\n\r\nexport default Expenses;","import React, {useState} from 'react';\r\nimport './ExpenseForm.css';\r\n\r\nexport const ExpenseForm = (props) => {\r\n    const [enteredTitle, setEnteredTitle] = useState('');\r\n    const [enteredAmount, setEnteredAmount] = useState('');\r\n    const [enteredDate, setEnteredDate] = useState('');\r\n\r\n    const titleChangeHandler = (event)=>{\r\n       setEnteredTitle(event.target.value);\r\n    }\r\n\r\n    const amountChangeHandler = (event) =>{\r\n        setEnteredAmount(event.target.value);\r\n    }\r\n\r\n    const dateChangeHandler = (event) =>{\r\n        setEnteredDate(event.target.value);\r\n    }\r\n\r\n    const submitHandler =(event)=> {\r\n        event.preventDefault();\r\n\r\n        const expenseData={\r\n            title: enteredTitle,\r\n            amount: +enteredAmount,\r\n            date: new Date(enteredDate)\r\n        };\r\n\r\n        props.onSaveExpenseData(expenseData);\r\n        setEnteredTitle('');\r\n        setEnteredAmount('');\r\n        setEnteredDate('');\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n         \r\n          \r\n            <div className='new-expense__controls'>\r\n                <div className='new-expense__control'>\r\n                    <label>Title</label>\r\n                    <input type='text' \r\n                        value={enteredTitle} \r\n                        onChange={titleChangeHandler}\r\n                    />\r\n                </div>\r\n\r\n                <div className='new-expense__control'>\r\n                    <label>Amount</label>\r\n                    <input type='number' \r\n                        min='0.01' step='0.01' \r\n                        value={enteredAmount}\r\n                        onChange={amountChangeHandler}\r\n                    />\r\n                </div>\r\n\r\n                <div className='new-expense__control'>\r\n                    <label>Date</label>\r\n                    <input type='date' \r\n                        min='2019-01-01' \r\n                        max='2022-12-31' \r\n                        value={enteredDate}\r\n                        onChange={dateChangeHandler}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className='new-expense__actions'>\r\n                <button type='button'onClick={props.onCancel}>Cancel</button>\r\n                <button type='submit'>Add Expense</button>\r\n            </div>\r\n            \r\n        </form>\r\n    );\r\n}\r\n\r\nexport default ExpenseForm;","import React, { useState } from 'react';\r\nimport './NewExpense.css';\r\nimport ExpenseForm from './ExpenseForm';\r\n\r\nexport const NewExpense = (props) => {\r\n        const [isEditing, setIsEditing]=useState(false);\r\n\r\n        const saveExpenseDataHandler = (enteredExpenseData) =>{\r\n            const expenseData = {\r\n                ...enteredExpenseData,\r\n                id: Math.random().toString()\r\n            }\r\n            props.onAddExpense(expenseData);\r\n            setIsEditing(false);\r\n        };\r\n\r\n        const startEditingHandler = ()=>{\r\n            setIsEditing(true);\r\n        }\r\n\r\n        const stopEditingHandler=()=>{\r\n            setIsEditing(false);\r\n        }\r\n\r\n    return (\r\n        <div className='new-expense'>\r\n            {!isEditing && < button onClick={startEditingHandler}>Add New Expense</button>}\r\n            {isEditing && <ExpenseForm onSaveExpenseData ={saveExpenseDataHandler} onCancel={stopEditingHandler}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewExpense;","import React, { useState } from 'react';\nimport Expenses from './components/Expenses/Expenses' ; \nimport NewExpense from './components/NewExpense/NewExpense';\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 100,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 100, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 100,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 100,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nfunction App() {\n\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = expense =>{\n    console.log(expense)\n    setExpenses((prev)=>{\n      return [...prev, expense];\n    });\n  };\n\n  return (\n    <div>\n      \n      {/* <ExpenseItem title={expenses[0].title } \n      amount={expenses[0].amount} \n      date={expenses[0].date}/>\n\n      <ExpenseItem title={expenses[1].title } \n      amount={expenses[1].amount} \n      date={expenses[1].date}/>  */}\n\n      <NewExpense onAddExpense={addExpenseHandler}/>\n      <Expenses item ={expenses}/>\n\n      \n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}